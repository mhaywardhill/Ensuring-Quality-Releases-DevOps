trigger:
- main

variables:
- group: terraform-group

- name: vmImageName
  value: 'ubuntu-latest' 

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Terraform
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadSecureFile@1
      name: tfvars
      displayName: 'Download tfvars file'
      inputs:
        secureFile: 'terraform.tfvars' 
    - task: Bash@3
      displayName: 'Move tfvars file'
      inputs:
        targetType: 'inline'
        script: |
          mv /home/vsts/work/_temp/terraform.tfvars $(System.DefaultWorkingDirectory)/terraform/environments/test
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: '0.13.4'
    - task: TerraformTaskV1@0
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: '$(service_name)'
        backendAzureRmResourceGroupName: '$(resource_group_name)'
        backendAzureRmStorageAccountName: '$(storage_account_name)'
        backendAzureRmContainerName: '$(container_name)'
        backendAzureRmKey: '$(key)'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
    - task: TerraformTaskV1@0
      displayName: Terraform Apply  
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: |
         -auto-approve 
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        environmentServiceNameAzureRM: '$(service_name)'

